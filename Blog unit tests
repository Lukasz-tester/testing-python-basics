# Post class def. in post.py

class Post:
    def __init__(self, title, content):
        self.title = title
        self.content = content

    def json(self):
        return {
            'title': self.title,
            'content': self.content,
        }

# Blog class def. in file: blog.py

from post import Post

class Blog:
    def __init__(self, title, author):
        self.title = title
        self.author = author
        self.posts = []

    def __repr__(self):
        return "{} by {} ({} post{})".format(self.title,
                                             self.author,
                                             len(self.posts),
                                             's' if len(self.posts) != 1 else '')

    def create_post(self, title, content):
        self.posts.append(Post(title, content))

    def json(self):
        return {
            'title': self.title,
            'author': self.author,
            'posts': [post.json() for post in self.posts]
        }

# Integration tests for creating a blog and __repr__ method

from unittest import TestCase
from blog import Blog

class BlogTest (TestCase):

    def test_create_blog (self):
        b = Blog('Test', 'Test Author')

        self.assertEqual('Test', b.title)
        self.assertEqual('Test Author', b.author)
        self.assertListEqual([], b.posts)

    def test_repr_multiple_posts(self):
        b = Blog('Test', 'Test Author')
        self.assertEqual(b.__repr__(), 'Test by Test Author (0 posts)')

        b1 = Blog('My way', 'Joe')
        b1.posts = ['Some post']
        self.assertEqual(b1.__repr__(), 'My way by Joe (1 post)')

        b2 = Blog('His way', 'Tom')
        b2.posts = ['Some post', 'Another post']
        self.assertEqual(b2.__repr__(), 'His way by Tom (2 posts)')
  
